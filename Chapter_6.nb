(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     40460,        949]
NotebookOptionsPosition[     38895,        891]
NotebookOutlinePosition[     39263,        907]
CellTagsIndexPosition[     39220,        904]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Roots", "Title",
 CellChangeTimes->{{3.649953402083594*^9, 3.649953405578*^9}, {
  3.649953479941255*^9, 3.6499534805184565`*^9}}],

Cell[CellGroupData[{

Cell["Open Methods", "Chapter",
 CellChangeTimes->{{3.6499534844184628`*^9, 3.6499534864640665`*^9}}],

Cell[CellGroupData[{

Cell["Miles Hill", "Subchapter",
 CellChangeTimes->{{3.649953493140679*^9, 3.6499534957146835`*^9}}],

Cell["Initialization", "Section",
 CellChangeTimes->{{3.649953538752163*^9, 3.6499535405949664`*^9}}],

Cell[CellGroupData[{

Cell["Homework #1 ( 2015 )", "Section",
 CellChangeTimes->{{3.649953566735013*^9, 3.6499535713682213`*^9}}],

Cell[CellGroupData[{

Cell["6.19 Determine Frequency for Given Impedence", "Subsection",
 CellChangeTimes->{{3.6499535777682323`*^9, 3.649953578392234*^9}, {
  3.650144848957461*^9, 3.650144860565996*^9}}],

Cell["\<\
The figure shows a circuit with a resistor, an inductor, and a capacitor in \
parallel. Kirchoff\[CloseCurlyQuote]s rules can be used to express the \
impedance of the system as\
\>", "Text",
 CellChangeTimes->{{3.6501422302479286`*^9, 3.650142258766594*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", "Z"], "=", 
   SqrtBox[
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["R", "2"]], "+", 
     SuperscriptBox[
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"\[Omega]", " ", "C"}], " ", "-", " ", 
        FractionBox["1", 
         RowBox[{"\[Omega]", " ", "L"}]]}], ")"}], "2"]}]]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6501422685621166`*^9, 3.650142311107111*^9}, {
  3.6501426203169155`*^9, 3.650142620348116*^9}},
 TextAlignment->Center],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", " ", "=", " ", 
    RowBox[{"impedance", "(", "\[CapitalOmega]", ")"}]}], TraditionalForm]]],
 ", and \[Omega] is the angular frequency. "
}], "Text",
 CellChangeTimes->{{3.650142319239133*^9, 3.65014235629282*^9}}],

Cell[TextData[{
 "Find \[Omega] that results in an impedance of 100\[CapitalOmega] using the ",
 StyleBox["fzero",
  FontSlant->"Italic"],
 " function with initial guesses of 1 and 10^3 for the given parameters.\n\
R,C,L = 225\[CapitalOmega], 0.6 10e-6 F, 0.5 H"
}], "Text",
 CellChangeTimes->{{3.6501423589280252`*^9, 3.6501424665788674`*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " equivalent of Matlab fzero will be one of the following: NSolve, FindRoot"
}], "Text",
 CellChangeTimes->{{3.650142564737291*^9, 3.6501426075280886`*^9}, {
  3.650144237694825*^9, 3.650144240674431*^9}, {3.6502133468759604`*^9, 
  3.6502133472278347`*^9}}],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.650144804204625*^9, 3.650144804750727*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Line", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.650144892577504*^9, 3.650144895952015*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Pure", " ", "function", " ", "return", " ", "for", " ", "given", " ", 
    "input", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Z", "[", 
    RowBox[{"r_", ",", "c_", ",", "l_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"r", "^", "2"}]], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", " ", "c"}], "-", 
          FractionBox["1", 
           RowBox[{"#", " ", "l"}]]}], ")"}], "^", "2"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ")"}]}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.650142643810169*^9, 3.650142803939732*^9}, {
  3.650142924256716*^9, 3.6501429299142284`*^9}, {3.6501429881662617`*^9, 
  3.6501430046188974`*^9}, {3.6501449858480916`*^9, 3.6501450069328547`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Solutions", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Z", "[", 
          RowBox[{"225.", ",", 
           RowBox[{"0.6", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "6"}]]}], ",", "0.5"}], "]"}], "@", "\[Omega]"}], 
        " ", "\[Equal]", " ", "100"}], " ", "&&", " ", 
       RowBox[{"1.0", "<", "\[Omega]", "<", "1000."}]}], ",", "\[Omega]", ",",
       "Reals"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6501438173842793`*^9, 3.650143879782691*^9}, {
   3.650143913880051*^9, 3.650144004744213*^9}, 3.6501449046863422`*^9, {
   3.6501450091015606`*^9, 3.6501450185191917`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FindRoot", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Z", "[", 
        RowBox[{"225.0", ",", 
         RowBox[{".6", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}], ",", "0.5"}], "]"}], "@", "\[Omega]"}], "-",
       "100"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "1"}], "}"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "6"}]}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.650144096278475*^9, 3.650144175499915*^9}, {
  3.6501442146597843`*^9, 3.650144222953399*^9}, {3.6501449089387536`*^9, 
  3.6501449161349735`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Output", "Subsubsection",
 CellChangeTimes->{{3.6501448111242485`*^9, 3.650144811721551*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayColumn", "[", 
  RowBox[{"\"\<Problem 6.19\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<NSolve\>\"", ",", "\"\<FindRoot\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Out", "[", "2", "]"}], ",", 
     RowBox[{"Out", "[", "3", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6501448134059553`*^9, 3.650144838906232*^9}, {
  3.650144874864646*^9, 3.650144883224574*^9}, {3.6501449224703913`*^9, 
  3.650144930394615*^9}}],

Cell[BoxData[
 PanelBox[
  TemplateBox[{TagBox[
     GridBox[{{
        StyleBox[
        "\"NSolve\"", {
         FontFamily -> "Calibri", FontSize -> 16, Background -> 
          RGBColor[0.75, 0.75, 0.75]}, StripOnInput -> False]}, {
        RowBox[{"{", 
          RowBox[{"\[Omega]", "\[Rule]", "220.02015638821746`"}], "}"}]}, {
        StyleBox[
        "\"FindRoot\"", {
         FontFamily -> "Calibri", FontSize -> 16, Background -> 
          RGBColor[0.75, 0.75, 0.75]}, StripOnInput -> False]}, {
        RowBox[{"{", 
          RowBox[{"\[Omega]", "\[Rule]", "220.02015638816272`"}], "}"}]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, 
      GridBoxBackground -> {"Columns" -> {{
           GrayLevel[1]}}}, DefaultBaseStyle -> "Column", 
      GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.5}}}], 
     "Column"],StyleBox[
    "\"Problem 6.19\"", {
     FontFamily -> "Calibri", FontSize -> 20, Background -> 
      RGBColor[0.75, 0.75, 0.75]}, StripOnInput -> False]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {2, 1}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]]], "Output",
 CellChangeTimes->{3.650144870386629*^9, 3.6501449308383164`*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.21 Projectile Motion", "Subsection",
 CellChangeTimes->{{3.6499535822182407`*^9, 3.649953586463448*^9}, {
  3.6499536515290117`*^9, 3.649953655044018*^9}}],

Cell[TextData[{
 "The trajectory of an object defined by the xy-coordinates can be modeled by \
the given equation. Find the appropriate initial angle ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "0"], TraditionalForm]]],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "0"], "=", 
    RowBox[{"30", " ", 
     RowBox[{"m", "/", "s"}]}]}], TraditionalForm]]],
 " and the horizontal distance is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]x", " ", "=", 
    RowBox[{"90", "m"}]}], TraditionalForm]]],
 ". Note that the initial elevation and final elevation are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["y", "0"], ",", 
    RowBox[{
     SubscriptBox["y", "f"], "=", "1.8"}], ",", "1.0"}], TraditionalForm]]],
 " meters."
}], "Text",
 CellChangeTimes->{{3.649953659989227*^9, 3.649953705259907*^9}, {
  3.6499537492961855`*^9, 3.649953880202817*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      SubscriptBox["tan\[Theta]", "0"], ")"}], "x"}], "-", 
    RowBox[{
     FractionBox["g", 
      RowBox[{"2", 
       SuperscriptBox[
        SubscriptBox["v", "0"], "2"], 
       SuperscriptBox["cos", "2"], 
       SubscriptBox["\[Theta]", "0"]}]], 
     SuperscriptBox["x", "2"]}], "+", 
    SubscriptBox["y", "0"]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.65021341869913*^9, 3.650213482898449*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Constants", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v0", "=", "30."}], ",", 
      RowBox[{"x", "=", "90."}], ",", 
      RowBox[{"\[CapitalDelta]y", "=", 
       RowBox[{"-", "0.8"}]}], ",", 
      RowBox[{"g", "=", "9.8"}]}], "}"}], ",", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Traj", ",", "\[Theta]0", ",", "sol"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Equation", " ", "to", " ", "solve"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Traj", "[", "d_", "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]0", "]"}], "d"}], "-", 
         RowBox[{
          FractionBox["g", 
           RowBox[{"2", 
            RowBox[{"v0", "^", "2"}], 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]0", "]"}], "^", "2"}]}]], 
          RowBox[{"d", "^", "2"}]}], "-", "\[CapitalDelta]y"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Restricting", " ", "domain", " ", "of", " ", 
         SubscriptBox["\[Theta]", "0"]}], " ", "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"sol", "=", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Traj", "[", "x", "]"}], "\[Equal]", "0"}], " ", "&&", 
           " ", 
           RowBox[{"0.", "<", "\[Theta]0", "<", 
            RowBox[{"Pi", "/", "2."}]}]}], ",", "\[Theta]0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Visual", " ", "Output"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Traj", "[", "k", "]"}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Traj", "[", "k", "]"}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
           "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0.", ",", "90."}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<y(x) [m]\>\"", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<x [m]\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Solving for an Unknown Angle\>\""}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]0", "/.", "sol"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"180.", "/", "Pi"}], ")"}]}], ",", 
            RowBox[{
            "LegendLabel", "\[Rule]", 
             "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(0\)]\)\>\""}], ",", 
            RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Framed", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
              ")"}]}], ",", 
            RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Default", ",", "Dashed"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1.8"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"x", ",", "1."}], "}"}], "]"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.65021349647197*^9, 3.6502135811254473`*^9}, {
   3.650213651606901*^9, 3.650213656535874*^9}, 3.6502140365636253`*^9, {
   3.650214081651998*^9, 3.6502140934311237`*^9}, {3.6502142101040154`*^9, 
   3.650214220594921*^9}, {3.65021428206767*^9, 3.650214920002643*^9}, {
   3.650214966919038*^9, 3.650215060588983*^9}, {3.650215103443783*^9, 
   3.650215987256379*^9}, {3.6502160377338943`*^9, 3.650216196230873*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1nk4Vd0XB3BDpBBFUkkRIRnO1dtAOd87nXtR5kRRZg1CkkzJr0ilhIr0
SqIMKUVJRAMpDeYMhVLSREoqQvnt96/zfJ69z372XmeftZaau7+tl5iIiIi0
qIjIf8+ddfpaJQ13TAdcD6ekpX6if/Saqbvz0uiVKrYyLLPPdHJKR5QG7zI9
fLXi3/yRz7RPgMY1CV45Xeu6d6rF+n66obNG8Iv7jO79kK5lovCVnqTw74kB
bifdyf/H8BvnO62qH136mdtPjyrO8J6fP0zn3w559pE7ThsYSvU0aYticUi9
u3GQLB6rJTa/tpfBvTI5VfM3M7HTmH1p3yIF3FB+uD3unQryVVWfTm6ahUrH
nxOjtDrGmlIyKi+o4HPXMnbxM03sPHLGwW33AkRFXdWMvqiD+zOXa7pnq+O2
7VVjF189BM5K+j52WQMd+v5Z80INUdfYqTuxaxHkuepjSu4s/N2jJy/L0cbF
Id+6pMVLsWIoJGakWQeyq8ZKFT7/g6R5qVwvji6WKGgOp9cvB+OyOXNG4RLk
H3x/9fLJlTgwWl617LMe3hzilj3YZ4KBA/e+Saoa4JP6u843bquRM5rgMlfJ
EDZOKuH/W0hjTo1lXn2MIVbIhRSfigEsG6xd3b4aYqzXcprGYcB1o3nts2+G
uFOu6VN0FAj2Zjku/24I3rZm5foTwM3x2kdTfhrCulo/QioTCNExmnZh1BBb
wns54XeAqdHFywskKJz+YNvgOgxsW33mj/JcCsN39fp0t7Ix+36PvZBLob02
x1FyBxurksNfnORRuNWh9rA7gI25Gy/Yd/MphAzPPH8qhI1pN3L1g4QURvX/
OkzEsvEwM2Ln8bUU/p6tq2zKZiNylw3r5HoKkyL8z4S+Y2PS24KM1m0U3h3+
NNn+IxuXCzyHRX0pVKd47NbvZ0N+ez5vyQ4KB6+vt+4ZYkP6el/lXn8KUn20
5FpxDlr2LbdUDKIgvUE+cIE6B1dkxs/J7aUwY0Wh2aPNHOwZWmFIx1NQr914
/7gHB1s8WvbzjlNguUuudPThQDQ7uUWYQMH26EbtT34cLMqKDbdMopDULTFZ
OpKDZXsXPl6bTEHh8IYHlmkcHLzG2a6STkHxpTjd2s5Bk8L8p78vU9DwL7iZ
3slBXPs69ddXKCyd5KTv081Bn39haFUBBXv9gnkjHzhIV2rTPnyNwsn9juOz
hzmo43YekrpBYabulVKXmVw4zauzaiujoBThsLTXhgvVWqvfNx5R2IyRa77r
uGiMWjJ/Rw2F3Eln9H44cvEjz9lb4zGFlce6Fom7cnHUucQx4QkF53TP2Wp+
XIxzHGpdailk3Qv863yEi25F4191TRQMJY7XPK/kovBZKjO1i0LoY0O+80Mu
fPR7k7OJK4813e95TNaTiJbivKJgp6R0+3sDFzqK5VbBrykEa529Iv+ai4yi
mX7P31CoMMtPWjPGxckffp+931Mwj3/k/MCIh5ijpW/eDVC4dlhmIGU5D35T
BhcGfCXni7HZt92Eh1/WPq6jxD3hHedncHlopeVrpAcpRGz9+t7Vlof3aXa2
6kMUCnizdv4J4IFrn2GrOkziD2exxiAe+sMerEglDjM5f+JCCA+GvlqzFUYo
CFi6Ny2ieEgoyKsR/02hez49lnqch7Sic2/bR8n9GPOOWVbAw0CJjZjtX3J/
f+UrTS3iweGQ+9Fy4leD33K6inlwXlgkv2iCQv7HsCfRFTwsK5WV+kXMa42X
a37Gg6nnzcLDoiwEF95M9e/j4UhJ7bd9k1jovDy2mPuVhyLqqepLYk4uypWG
eNgdPFlgJMGC3LknrypGeajbvOrgW+Lco68Wykzlo7Ew5e7SySy88JEsyNXm
Y6adomruFBZCkjg8kyV8+DZFzPhCrFQR+bLWgI/8iBJ1aioL9jOGJYeW8dFp
k5V8k7ih/MPm1Xw+Jk/YP7spzYL/h4W/6oV8JLZYnvtBPG2G61H3NXyItc2J
p2RYWOPTfivWjo+kDTp3c4lrpj+e3uTGx/88F/gflWXBZ5VErqcXH6uS8hdU
EUv6sE2Ht/DR9VlqYISYV166TSWAj2YV4063aSzc875U5R3JR/SBYEkdORZu
3Y7bPXaGD1nn9UlH5VlY//6RdHw6H4tXSIgWE/+Sn5S5IJMPPTomrpN4qXdE
HT+Pj3e1Y0Pa01m4Jr9DK6GEj3kDlTNKiK1M8irUb/OxXU3MtZ14wKvXrvgO
H+f2KTweIV5y2yXqZTUft8ovDyybQeLrZflC4zkfxStLY3OJBQlH/Eva+Fj6
4PD1SuL3ZQ8lzDv4SA1dMtZBrCFPs/zf8qHk9bFLWoGFKuPwGtH3fOj+Kxqq
TuzuVbLp5Cc+tMf7DVYQZ5QZxJV+46PV1HjQlZju3a625gcfBxekje0ifiWX
W/JqmI85eg1qB4lVvBa8E5/gY+Rhwf0c4tvHncOSxRiw7Z1MSog3lJ2W15Fk
sEOmtaGa+LTc9NWWsgwi/vCtuom97+/tqpNn8KMx7m8f8T+7Pu+1UmSQFHmg
6RfxJM31qg2zGKwX13sqoshCU2vVHeu5DDiuhz5OIT5/yHBzoyoD+1OnFs8g
DjA+O2GjzuBYpn3ibGLT/ikZTZoM+mOrVRYQy6YHw06HQSD/4zNN4k6rnu7m
JQxUO8rPLya+JGr9P3tDBoNC7r/6xKHXy9VajBj0xYeXUsRCL53KdcsZSF/x
GjciVpqV7N5qzMAmS9TzH+LeGjHx9aYM7u60+vafb4T5Z7WxGdgpW53/z/uX
dHId+QxkU0T2LCW2fiV81y5k8O2Lx04W8fyE4minNQxGVEITDIgH2OqaL60Y
aGnguS5x+VB89QY7BuHipau0iOMujnl1ODAYLut5rEa8Yf0WSecNDFLN74XP
Jdae0pLd6cLAvcjSVpF4uIwtcHEj+/0ev1aG+KFvwYcuTwY+U/+3Q5z4pOrc
Q5u2MMga1Sj6TeLv0RCr/Xo7g8lVYXO/ErP2/6jZ7M8g0WN/Xg+xyFK3rd2B
DNBp4txGXN9bO8UtmIGyXo7RE2Jfsxxz970MVq4/YX2F2HhMoe9tFINoQ8Xk
s8RTrkTFeUQz+PmGETlGnC2/4ZlnHAOL2vucrcS7Kx/69sYzoCZPnetAzAsy
kvVOYrBq9iRlDvGbNhlLn1QGj6plo2YRXzscOvAhjYHAdV6fCHGkyfv4LRkM
vjS9CvtE/geVc3frt+YwKMAeqVvEDt6BNr7FDP6s/tthTqyp/Hqw/xaDwtQ0
Xz3iH48tknaUMzha268mR5yop9nsV8WguCJztJ78n89+tNnvbGTw4q6np4D4
TDbv5+BzBlWdiXMWEm91LDwV2M6gsTHg5x+SDyTLj7Tues3Am8ebXUjMPrDa
MfgLg40W7NmyxPq+a2W5gwwiVzxgvyL5Zs46l0q5nwy2rtDbUkD8fdHeJXnj
DJIDCgssiDOflIt0SgtgU7lfPYzkq/jrz4pz5QQo5C8z5hKHpXVu260gQGdH
vZU0sa3f+PNpcwU4hOKg0yTfic1YlcdeLMDqPuHFbJIvB0YtNk3TF+DVJL3L
PsQvezYqdFAC8Knha1rERcXhe4NWCuBfufrGBZJ/3Z1u2+QIBZj/8MT5JJKv
qzKMR2V8BBix9ZhlKvXf9zC/+mKbAMqpueMDpB6kBW7wzPYT4M9g8+t04iBe
WB0dLIB6Z+e5MUmSrz6WZgbGCFCTWCKZR+pJtMFKi/YsAY7tT/BvFmOBf2d5
Wla3ABOhDVe8xylsazV1MHgnQOyiPTV/xyjED/Dlb38QwFHcSSyZuF3VPrpp
QICWtXXN90m99N0X4Cv6RwDDRfu+TCP1NAl5qzbPFsLv3e+xyJ8UXlfO6Zpj
K4RCil3MzS+kv+tQS8leJ8T5Na6xLGLtIW0blpMQEazc3Cv9FAIXLq82cxVC
/Pgn4fk+CpLRdldC/ITYE8cSifxEYQn/6N7WI0J8Tuwyk+0l/cmjP/OSqoT4
8TzF7EAHRYppbv/WR2T+z/cVLS9Jf+lle5v9lKwXb7BYi3j/pBzHwSYhVmpd
+fywnUIc2/qE9VshlEedpEdbKJy9nSklJ2qGHLWwp/oNFO5fFQzFmZpBIuQ5
01RF9j8xeN+DY4aKVNsycWLGMi3BhDFDpNETzaWVFJ70f9PrW2sG1fqL7xLv
UWjWObPF3MUMzdnTxNgVFHqz+rukIswg2559e8dNClNOJ9bElJrhLntQRzSX
9Ct+vuctKsywwyD278wcCv08Qdj0+2Zw6s16rpNNoWFwXPdsjRm+5e2MsbxA
+nOLLcdvtJlhQfKm33EZJJ4Tpg49P80QOrp3cdtpsj/v/h6wzDFrqKmw4BA5
/1LBxNglc/zOarF39yLxNJ7dFVVgjriXRlcsPCm00X1lEkXmULxhoL3Ug4xb
HA+WKzWHlLXIQTE3Mu7W9kX9kTlCdCXenHQm48d9Os16zJEYcFYxwY5C66fY
0pS5FjhuJBXYDQq652p2GR21wJ20hxKflEl/2ThrekDUGry+dqzT4aYhvBpZ
/Ts810JwzqM5y8IQB8762w1wLWE4Mykx/pIBxg3DenYts0KuS+jZjiP6sDPL
dXSRscatai9hpJseWl1G7cRjrQGH7RInJ3Sx04k1cPi3NVzfhiUFpyyGqEl4
XeNWG6x4eq88fY4OTEV0uWk9NoieLf1q6yYtnLh8z0GwzhY144IPGZmaSF5V
8TeowRbvWPs935xfiPiiJ/0eZnZoeO43yD2ihnS5O6FGZXZY0biy4MaQKjZa
K/8bs9QeUu19LRImc0CFOG68lW0P5cSFC3NTZmIsJs/tstI6iNyt3uP2XB67
9riNqyesg2t+U4xNmyTErSf+CRN1gMism5vaTo3QMvul1gaJO+Ce6zLT7H9G
aMUb0z39JByAILVsj5ZhepGyRpL7FDI+vFzukuIwbd4tHDCf7oCond6MV9JP
OiEgKXuuGrHBY+GpI99plUTNWRUg6+dbmJR0fKQ1q/T1SzjEmX8Vh5U+0vo/
l/MLeWT+ktgJBdsPNO1kvuuikHhUeXLvo17aXc2//pg1cTjd3VP4ls4rvBW7
yZW8r2G4O+9vO13Ucz/d0Z04WMh9GtBGl818WmzrSfxV2ijnbQv9LLSrh9lC
bHNyz7HqJvobWwwGAcR31uloyT+mf++SXq8TSPxgRbfMt2paLFvRb2EQsXLg
S+/6SlphqlbarBBiYT31VbmUVllleH16GPEtQZnz8yJaw2/lE+kI4kMvkrzm
5dF6GZw3EpHECb8jquen0suaLEYm9hGLiGSUh98y/T8Dmh+j
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1:eJwV1nk8VVsbB3CZ0nSRlDQSMkSSKGdzfmfaxzFlCplTSAlJXXNukYoQJRWu
NBClUjKmUFIpklCGFErlipBCedf71/58P8/ee6397LXW8yh4+Ft7CgsJCcnN
EBL6/3XvC63VxY2VRhsMFgVnnv3MHO0TKHpw05mTTKlsl+IvzNQz7VFK3GvM
4N9Nad+avzK9A5RuinErmGf/LRqIkxxkNnbU8X9w6pkGD8YX2rCGmaIy51MG
OR1Mi7fycdo3x5jLtaJLv3AGmOYjYsyf4X+Y+eXB9f2cKaZDR/Eul88zoR7c
4GEQNA9xB34OpsyVxYMyyeUm72UxHBhxV6C+DHfkanfH9S7FTc2AxFwPRVQ7
jE1PMBUx9jHCcqulCr506rGK6pWxfEReLv+ZGqKibihHX1bDKrH+YjlXTZRb
3zBw8dXEF6lIbscWbbRr+V9cFqKN+KbG1RN16yDFUZxc6KGDq39d0hRmr8fl
Ed8Xyeq6SN3oFaJ0XBfzqMlSmS8b0OssFxRctAFrZJTHMxv0Qe1NC9d7r4f8
Ix9vXDu1CbtuDZl5v9fH+6OcsocHGfDv/fosvHMjPiv2drzfZogqN72Ps8o3
wWrr0rB/VjHhUD227XCgATZKBhedjgFKqgMqWCsZmOyz+EvpGFCtPfNimiID
lRXK3oXxQNBtyyWDSgxwd72Sa0gB3v6YenBKjQHLR1rhEtlA3v6y7kYdBnaG
9bHDKgELmyd7RXkMpH2ybnQfB8oT9N467GRg/L7mVw0fFhaLb354N4+Btuc5
DuJ7WBhS0trTcY2BknaF2u4AFk6dHvcWusFA8LjshdPBLLB9BTac2wxMaP2x
m45lweBbv1BROQN/Ml5UN11hIcF0UQm/ngHRcP9zIb0sNLusS1UfYKD32OeZ
tv0s8O86hssPMvDozPb9WgMsxLj73ZEYYuDIbXvLnhEWvPJs5btHGJD4yhQ3
F2Hjscyye6GTDMxxlApcqcjGIJXh6jabwvyNtwSP3dho63eU/qhCQfG5U1Xi
djZyrjdopKlS0PEQ3+TgzYbmqds5xuoUrOOdVD/7seFUW1dzSZNCcrfYzDmR
bLDuq54Q6FKQOeb40CKdDSOR+zt4LAoL3oowW9rYGHnFXS3uSEHJv+BuZgcb
8Q0Z/tFOFHRFt2p5d7PRMeC5eIYLBVutgmU/P7GRHs85OeZG4dQhh6nF42xc
d9ed/8yTgqzG9VIXWQ4mHAccVPdSWBhup9tnxYFlWtGv/CMU3PDzpu8WDvr5
tyy7Yynkip7THHXgwGpmt5HMMQqbTnSqiLhzkFTU0h0UR8E5c8diBT8O6hpU
GauTKFx8EPjH+TgHcpNuAuOzFLTFEuuaqzmApnx9WB6FkCfaPOdaDh63/D3r
cD6F6hNNVT1POJBPkug6eo2CzcKF5d8bOVivU2OWVEDhwOqM61LvOFiim4GE
Qgr3BPnJZpMcvNDq/Ycuo2CS8Nj54Xou7k/f25VbR+HmsbmDZ/S5cDp2sOPU
E/J9MVYHdzO4YEQoXDn4lEJPWPuF+Rwuai6KsyzrKYT7fPvobs3Fj69bTnc2
UCjgLtr7O4CLvp0SJbktJP9wFn4ZxEVhamNOaCuFUMaFlEvBZDytkG8mbRT4
Ohp3TaO4uJix+8jHNxS6VzAnzyZykXjgddOsTrI+Jr1i9Aq4+LbgXp9QD4Xg
H/kLZxdy8eljnE0JcdfwUE5nERerVjEW+/VSyO8PfRp9j4sdbw2uNfdR4LYk
SL6q50Kce3/oRD/Jx627Z/2/ctEq0jFy8z8KHdcm1TnfuJgOufXOfJACOxcV
C0e42OnoveozseS/T7vuTXAh6hhUKD9E/md816q5s3lws5X55vOdwhtv8YJc
VR6yNnh+KPlB5pfM5jLW8KC9+U6hzjjJ373It8/X8iA1ZSKdT2w7f1x8RI+H
YsnNIWd+Umis+ORmyOOhcHnhqOsEBf9Pq340GPNwp8lQ/znxX/Pd4z3MeBCT
l5YwmKRg5t1WEmvDw0mPBFvJKQp10k+km7bxYN3ek5b7m4I3JZa7w5OHWrVr
5nP+UBD3ZhmN7+ThyJyKJF9ibkXprqUBPPw4WlilPk3hgVdejVckDxG7J16c
FjJESXnc/slzPOg3jKWqiBjC/uPjOQmZPCRY62sHEv+QEs1emc3DOp8H9hXE
ul7hL3hXefC2vGplJmqIm1J7VicV8xAm3jLkKGaIzYyr9xTLeeAq2U6dIx70
7LMpquTB8fXi1DfEa8pdot4+4mHvcFiQtbghcj0t3ig182Ahfb5DZ6Yh+EnH
/YtbeTj6ZIujN/HHsloxk3YeJGUdvM4RK0kxdfw/8DDHa73aFHGNQVjdjI88
RO6e260uYQgPz2LXU595YIpqKjsQZ5WtjSsd4iH/G9exgJjZt1vBbJQHezZl
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
9CNiE6a0Q3v26W2GXaH+84QzG2EjyHVwmWuJmyoP7ZWu6qPFZcJGJNYSQzVN
EitO6GHvVp3BY78sUaEYOd23ewNmMMJevPSxQu73cNPXm3RhJKTBSe+xwoJG
5/uXmnWQcu2BHX+LNWwPb6nO8F+HVOren6BGaxydr7ai/fJa0pM/HdgusEHa
2om1tvw1yJSsDFlfZoOSJc4Ky0ZV4WQpdz5G1xba7zPXm6goY12wg1PJFVtE
MZYWuPsoYDLm6rZrC7fA3TPKeabyEuz7e9uUYtIWRHnVHpf2nQ8Ry+kNoTPs
4G5V5Z/bLIK5hyTMg0TssLJW/rRMrAgW3JHe4Sdmhyx+XUrAJhGoyCkle8yy
Q7f/imVCmcIw6TYeNJG2g5B9pdt+rxlICki+skTBDhCKEOz9/Ju59KTyonsg
Dk5y4s4bZSrXaGkVs8n9MfRkkt8IU2tMn3eLS5x/ybyq4TuTudVk32VjO0Sx
t85+fnKY6aHg33DCkpjiP1ZQG2RevVUS6+pO7pcN1Til1sss7KnKdPAgcavP
9y/2f2CWyT4rst5B4tW5paE575n1IZ099E7iPdplv427mEMsYawNIB4LfHxf
v5n5a98ce7VA4mRb3pbCl0zhKwv8VgURq15fMuLwgikze3X6omDi43//7jB6
yFxKad+WDiVuDEufcq9kKvltejonnHjl8Z2h7DtMzSz2e7FI4p/rK724l5h6
TaY/pw8SCwndlX1QY/Q/06Ca4w==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> {
       RGBColor[1, 0, 0], 
       PointSize[0.03], 
       PointBox[{0, 1.8}], 
       PointBox[{90., 1.}]}, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"y(x) [m]\"", TraditionalForm], None}, {
        FormBox["\"x [m]\"", TraditionalForm], None}}, FrameStyle -> 
     Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Solving for an Unknown Angle\"", TraditionalForm], 
     PlotRange -> {{0., 90.}, {0., 29.043077879882965`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"37.837972746140316`", "51.65274484888216`"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(0\\)]\\)\"", {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], RoundingRadius -> 5, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                 "&"}], ")"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(0\\)]\\)\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.650215443418358*^9, 3.6502156935005827`*^9}, {
   3.650215791326007*^9, 3.650215935194963*^9}, 3.6502159876403103`*^9, 
   3.650216074331192*^9, {3.650216150979911*^9, 3.650216196874442*^9}}]
}, Open  ]]
}, Open  ]],

Cell["6.29", "Subsection",
 CellChangeTimes->{{3.649953591517857*^9, 3.6499535921574583`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{928, 1028},
WindowMargins->{{-10, Automatic}, {Automatic, -10}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 136, 2, 120, "Title"],
Cell[CellGroupData[{
Cell[741, 28, 101, 1, 85, "Chapter"],
Cell[CellGroupData[{
Cell[867, 33, 100, 1, 80, "Subchapter"],
Cell[970, 36, 101, 1, 83, "Section"],
Cell[CellGroupData[{
Cell[1096, 41, 107, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[1228, 46, 183, 2, 58, "Subsection"],
Cell[1414, 50, 269, 5, 67, "Text"],
Cell[1686, 57, 550, 17, 87, "DisplayFormulaNumbered"],
Cell[2239, 76, 284, 8, 40, "Text"],
Cell[2526, 86, 344, 7, 95, "Text"],
Cell[2873, 95, 333, 8, 41, "Text"],
Cell[CellGroupData[{
Cell[3231, 107, 95, 1, 46, "Subsubsection"],
Cell[3329, 110, 137, 3, 45, "Input"],
Cell[3469, 115, 933, 26, 98, "Input"],
Cell[4405, 143, 827, 21, 78, "Input"],
Cell[5235, 166, 721, 19, 108, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[5993, 190, 99, 1, 37, "Subsubsection"],
Cell[CellGroupData[{
Cell[6117, 195, 478, 11, 45, "Input"],
Cell[6598, 208, 1911, 42, 215, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8567, 257, 163, 2, 58, "Subsection"],
Cell[8733, 261, 910, 28, 94, "Text"],
Cell[9646, 291, 555, 17, 56, "Text"],
Cell[CellGroupData[{
Cell[10226, 312, 4962, 121, 713, "Input"],
Cell[15191, 435, 23531, 445, 372, "Output"]
}, Open  ]]
}, Open  ]],
Cell[38749, 884, 94, 1, 58, "Subsection"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
